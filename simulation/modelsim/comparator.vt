// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "08/08/2020 21:11:32"
                                                                                
// Verilog Test Bench template for design : comparator
// 
// Simulation tool : ModelSim (Verilog)
// 

`timescale 1 ns/ 1 ps
module comparator_vlg_tst();
reg [31:0] comp_A;
reg [31:0] comp_B;
reg comp_unsigned;
// wires                                               
wire [31:0]  C;

// assign statements (if any)                          
comparator i1 (
// port map - connection between master ports and signals/registers   
	.C(C),
	.comp_A(comp_A),
	.comp_B(comp_B),
	.comp_unsigned(comp_unsigned)
);
reg clk;
initial begin
	clk = 0;
	comp_A = 0;
	comp_B = 0;
	comp_unsigned = 0;
end

always #(1) clk=~clk;

always@(posedge clk) begin
	comp_A <= ($random);
	comp_B <= ($random);
	comp_unsigned <= ($random)%2;

end
                                               
endmodule

